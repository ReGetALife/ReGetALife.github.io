{"meta":{"title":"Solidays","subtitle":"Solidays","description":"Blog by GetALife","author":"Solidays","url":"http://solidays.tk","root":"/"},"pages":[{"title":"","date":"2018-12-15T11:07:47.128Z","updated":"2018-06-01T04:53:27.315Z","comments":true,"path":"404.html","permalink":"http://solidays.tk/404.html","excerpt":"","text":"Ooooops! 你访问的页面飞走了~~~放轻松，这没什么的，闭上眼睛，听听歌吧😅 生活还是那么美好☀️ var ap = new APlayer({ element: document.getElementById('player2'), // Optional, player element narrow: false, // Optional, narrow style autoplay: false, // Optional, autoplay song(s), not supported by mobile browsers showlrc: 3, // Optional, show lrc, can be 0, 1, 2, see: ###With lrc mutex: true, // Optional, pause other players when this player playing theme: '#e6d0b2', // Optional, theme color, default: #b7daff mode: 'random', // Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation` preload: 'none', // Optional, the way to load music, can be 'none' 'metadata' 'auto', default: 'auto' listmaxheight: '513px', // Optional, max height of play list music: [ { title: 'Beautiful You', author: 'Monk & Neagle', url: 'http://solidays-1252908379.cosgz.myqcloud.com/Beautiful%20You.mp3', pic: '/music/Beautiful You.jpg', lrc: '/music/Beautiful You.lrc' }, { title: 'In My Sleep', author: 'Austin Hartley-Leonard', url: 'http://solidays-1252908379.cosgz.myqcloud.com/In%20My%20Sleep.mp3', pic: '/music/In My Sleep.jpg', lrc: '/music/In My Sleep.lrc' } ] }); var ap = new APlayer(option);"},{"title":"分类","date":"2018-12-15T11:14:21.993Z","updated":"2017-07-25T12:04:40.843Z","comments":true,"path":"categories/index.html","permalink":"http://solidays.tk/categories/index.html","excerpt":"","text":""},{"title":"游戏","date":"2018-12-15T11:14:22.500Z","updated":"2018-06-01T12:21:36.377Z","comments":true,"path":"games/index.html","permalink":"http://solidays.tk/games/index.html","excerpt":"","text":"基于HTML5的小游戏 1. HexGL HexGL是一款赛车类游戏，画面效果非常棒。 2.Flappy Text Flappy Text是经典游戏Flappy Bird的奇葩版，这里飞的不是鸟而是名字……"},{"title":"标签","date":"2018-12-15T11:14:22.196Z","updated":"2017-07-25T12:05:01.883Z","comments":true,"path":"tags/index.html","permalink":"http://solidays.tk/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"An Attack on Mongodb","slug":"An-Attack-on-Mongodb","date":"2019-06-24T09:09:44.000Z","updated":"2019-07-09T07:22:09.109Z","comments":true,"path":"2019/06/24/An-Attack-on-Mongodb/","link":"","permalink":"http://solidays.tk/2019/06/24/An-Attack-on-Mongodb/","excerpt":"亲历的一次 Mongodb 攻击项目需要，在腾讯云上部署了 Yapi 来管理接口。今天同学突然跟我说 Yapi 上不去了。检查一下发现，账号都被删了。再检查一下发现，整个数据库都被删了，僵硬。","text":"亲历的一次 Mongodb 攻击项目需要，在腾讯云上部署了 Yapi 来管理接口。今天同学突然跟我说 Yapi 上不去了。检查一下发现，账号都被删了。再检查一下发现，整个数据库都被删了，僵硬。 于是打开 Mongodb 日志查看操作记录。 默认在 /var/log/mongodb/mongod.log 位置，然后 1cat mongodb.log |grep dropDatabase 然后发现有许多条删库的记录。 1232019-06-24T10:46:23.117+0800 I COMMAND [conn116] dropDatabase account-db - starting2019-06-24T10:46:23.117+0800 I COMMAND [conn116] dropDatabase account-db - dropping 0 collections2019-06-24T10:46:23.244+0800 I COMMAND [conn116] dropDatabase account-db - finished 时间在十点多,那时我还在睡觉😁 锁定这个连接 [conn116] 然后 1cat mongodb.log |grep \"[conn116]\" 结果如下： 123456789101112131415161718192021222019-06-24T10:46:23.117+0800 I COMMAND [conn116] dropDatabase account-db - starting2019-06-24T10:46:23.117+0800 I COMMAND [conn116] dropDatabase account-db - dropping 0 collections2019-06-24T10:46:23.244+0800 I COMMAND [conn116] dropDatabase account-db - finished2019-06-24T10:46:23.244+0800 I COMMAND [conn116] command account-db appName: &quot;robo3t&quot; command: dropDatabase &#123; dropDatabase: 1, writeConcern: &#123; w: 0, wtimeout: 0 &#125;, $db: &quot;account-db&quot; &#125; numYields:0 reslen:62 locks:&#123; Global: &#123; acquireCount: &#123; r: 2, w: 1, W: 1 &#125; &#125;, Database: &#123; acquireCount: &#123; W: 1 &#125; &#125; &#125; storage:&#123;&#125; protocol:op_msg 127ms2019-06-24T10:46:26.281+0800 I COMMAND [conn116] dropDatabase analysis-db - starting2019-06-24T10:46:26.281+0800 I COMMAND [conn116] dropDatabase analysis-db - dropping 0 collections2019-06-24T10:46:26.294+0800 I COMMAND [conn116] dropDatabase analysis-db - finished2019-06-24T10:46:28.813+0800 I COMMAND [conn116] dropDatabase movie - starting2019-06-24T10:46:28.813+0800 I COMMAND [conn116] dropDatabase movie - dropping 0 collections2019-06-24T10:46:28.832+0800 I COMMAND [conn116] dropDatabase movie - finished2019-06-24T10:46:31.369+0800 I COMMAND [conn116] dropDatabase config - starting2019-06-24T10:46:31.369+0800 I COMMAND [conn116] dropDatabase config - dropping 0 collections2019-06-24T10:46:31.382+0800 I COMMAND [conn116] dropDatabase config - finished2019-06-24T10:46:34.208+0800 I COMMAND [conn116] dropDatabase yapi - starting2019-06-24T10:46:34.208+0800 I COMMAND [conn116] dropDatabase yapi - dropping 0 collections2019-06-24T10:46:34.544+0800 I COMMAND [conn116] dropDatabase yapi - finished2019-06-24T10:46:34.544+0800 I COMMAND [conn116] command yapi appName: &quot;robo3t&quot; command: dropDatabase &#123; dropDatabase: 1, writeConcern: &#123; w: 0, wtimeout: 0 &#125;, $db: &quot;yapi&quot; &#125; numYields:0 reslen:56 locks:&#123; Global: &#123; acquireCount: &#123; r: 2, w: 1, W: 1 &#125; &#125;, Database: &#123; acquireCount: &#123; W: 1 &#125; &#125; &#125; storage:&#123;&#125; protocol:op_msg 335ms2019-06-24T10:46:42.841+0800 I COMMAND [conn116] dropDatabase local - starting2019-06-24T10:46:42.841+0800 I COMMAND [conn116] dropDatabase local - dropping 0 collections2019-06-24T10:46:42.866+0800 I COMMAND [conn116] dropDatabase local - finished2019-06-24T10:47:45.544+0800 I STORAGE [conn116] createCollection: admin.RECOVERY with generated UUID: 764e8a75-d5f5-44da-aa01-89035f820b7d2019-06-24T10:48:35.495+0800 I NETWORK [conn116] end connection 207.148.13.163:40264 (8 connections now open) 一顿操作行云流水，肯定是机器人操作，删完还不忘创建一个 admin.RECOVERY ，留下一个联系恢复的邮箱。 123456&#123; \"_id\": &#123; \"$oid\": \"5d1039f3a6d39755438bc654\" &#125;, \"recovery\": \"email whitx@gmx.com\"&#125; 查了一下这个地址，是美国的一台 vultr 的 vps ，很难找到是谁。而且仔细看一下日志，美国加拿大的很多陌生 IP 都造访过我的 Mongodb，真实流泪。 于是我就给mongodb加上了密码，换了端口，并且养成了经常备份的好习惯。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"Mongodb","slug":"Mongodb","permalink":"http://solidays.tk/tags/Mongodb/"}]},{"title":"run interactive python or node.js programs in git bash","slug":"run-interactive-python-or-node-js-programs-in-git-bash","date":"2019-06-12T04:46:27.000Z","updated":"2019-07-09T07:12:09.304Z","comments":true,"path":"2019/06/12/run-interactive-python-or-node-js-programs-in-git-bash/","link":"","permalink":"http://solidays.tk/2019/06/12/run-interactive-python-or-node-js-programs-in-git-bash/","excerpt":"在 Windows git bash 中运行交互式的 python 或 node.js 应用今天在使用 gitmoji 时发现，使用方向键来切换选项是无效的，并且还有许多显示上的问题。","text":"在 Windows git bash 中运行交互式的 python 或 node.js 应用今天在使用 gitmoji 时发现，使用方向键来切换选项是无效的，并且还有许多显示上的问题。 其实，在一开始安装 git 的时候，有一个步骤是选择使用 MinTTY 终端还是 Windows 原生的终端（也就是 cmd )。而我恰好选择了 MinTTY 。 然而，MinTTY 不支持交互操作 :) 解决方法：可以通过 winpty 提供的接口来实现交互操作。 例如： 123$ winpty python$ winpty npm.cmd install$ winpty gitmoji.cmd -c 参考：https://www.zhihu.com/question/36142943https://stackoverflow.com/questions/54588898/how-to-run-npm-scripts-with-winpty 后续： Windows 终端对 emoji 的支持是有问题的，大多数 emoji 都无法正确显示 orz建议把 Windows 升级到 1903 版本，安装全新的 Windows Terminal ，美滋滋。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[]},{"title":"Build TensorFlow-GPU from Source on Win10","slug":"build-tensorflow-gpu-from-source-on-win10","date":"2019-05-16T06:23:31.000Z","updated":"2019-05-18T16:26:32.023Z","comments":true,"path":"2019/05/16/build-tensorflow-gpu-from-source-on-win10/","link":"","permalink":"http://solidays.tk/2019/05/16/build-tensorflow-gpu-from-source-on-win10/","excerpt":"Win10平台从源码构建支持GPU的tensorflow由于预编译的TF版本不支持 Compute Capability 为 3.0 的GPU，至少需要是 3.5，于是从源码开始构建。","text":"Win10平台从源码构建支持GPU的tensorflow由于预编译的TF版本不支持 Compute Capability 为 3.0 的GPU，至少需要是 3.5，于是从源码开始构建。 失败的尝试 anaconda python 3.7 msys2-x86_64-20180531 bazel-0.25.2-windows-x86_64, bazel-0.24.1-windows-x86_64 和 bazel-0.15.0-windows-x86_64 Microsoft Visual C++ 2015 Redistributable 更新 3 Microsoft 生成工具 2015 更新 3 GPU: NVIDIA Quadro K1100M(Compute Capability: 3.0) NVIDIA GPU Driver 416.78 cuda 10.0 cudnn 7.5 tensorflow-1.13 和 tensorflow-1.12 遵循官网的步骤，尝试了上述的组合，均出现了诸如找不到包的致命问题。 放弃。 成功的尝试 python 3.6 msys2-x86_64-20180531 bazel-0.15.0-windows-x86_64 Microsoft Visual C++ 2015 Redistributable 更新 3 Microsoft 生成工具 2015 更新 3 GPU: NVIDIA Quadro K1100M(Compute Capability: 3.0) NVIDIA GPU Driver 416.78 cuda 9.2 cudnn-9.2-windows10-x64-v7.5.1.10 tensorflow-1.12 较新的版本没有成功，于是稍微回退一下。参考官网上的经过测试的编译配置，重新安装了原生的 python 3.6，使用 TF 1.12。依旧按照官网的步骤。 编译时间比较久，一个多小时，好歹成功了，但是 Warning 很多:) 123INFO: Elapsed time: 5194.237s, Critical Path: 784.67sINFO: 4504 processes: 4504 local.INFO: Build completed successfully, 6049 total actions 由于 Bazel 的版本比较老，必须借助 MSYS Shell 来编译软件包。参照官网步骤，停用 MSYS 的路径转换，并设置了必要的 PATH 后，在 MSYS Shell 中切换到项目根目录并输入： 12345678$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /d/tmp/tensorflow_pkg2019年05月17日 9:51:12 : === Preparing sources in dir: /tmp/tmp.fP9a10VeySUnzipping simple_console_for_windows.zip to create runfiles tree...Unzip finished./d/Desktop/tensorflow-1.12.2 /d/Desktop/tensorflow-1.12.2/d/Desktop/tensorflow-1.12.22019年05月17日 10:04:44 : === Building wheel2019年05月17日 10:06:50 : === Output wheel file is in: /d/tmp/tensorflow_pkg 软件包就在 D:\\tmp\\tensorflow_pkg 目录下了。安装即可。","categories":[{"name":"ML","slug":"ML","permalink":"http://solidays.tk/categories/ML/"}],"tags":[{"name":"TF GPU","slug":"TF-GPU","permalink":"http://solidays.tk/tags/TF-GPU/"}]},{"title":"Building a RESTful Web Service with Spring","slug":"Building-a-RESTful-Web-Service-with-Spring","date":"2019-04-10T09:33:06.000Z","updated":"2019-04-11T06:27:17.317Z","comments":true,"path":"2019/04/10/Building-a-RESTful-Web-Service-with-Spring/","link":"","permalink":"http://solidays.tk/2019/04/10/Building-a-RESTful-Web-Service-with-Spring/","excerpt":"使用Spring构建RESTful的Web服务目标构建一个可以接受http请求的API。","text":"使用Spring构建RESTful的Web服务目标构建一个可以接受http请求的API。 这个API看起来是这样的，访问http://localhost:8080/greeting，返回 1&#123;\"id\":1,\"content\":\"Hello, World!\"&#125; 或者带上参数http://localhost:8080/greeting?name=User，返回 1&#123;\"id\":1,\"content\":\"Hello, User!\"&#125; 准备 Java8或更高。 maven3.2或更高 Spring boot 2.1.3 编辑器或者IDE 操作下载样例源码，或者使用git clone到本地： 1git clone https://github.com/spring-guides/gs-rest-service.git 然后进入到initial文件夹下，之后的所有操作以该文件夹为工作目录。 创建资源类 新建src/main/java/hello/Greeting.java文件： 1234567891011121314151617181920package hello;public class Greeting &#123; private final long id; private final String content; public Greeting(long id, String content) &#123; this.id = id; this.content = content; &#125; public long getId() &#123; return id; &#125; public String getContent() &#123; return content; &#125;&#125; 创建控制类 新建src/main/java/hello/GreetingController.java文件： 12345678910111213141516171819package hello;import java.util.concurrent.atomic.AtomicLong;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;@RestControllerpublic class GreetingController &#123; private static final String template = \"Hello, %s!\"; private final AtomicLong counter = new AtomicLong(); @RequestMapping(\"/greeting\") public Greeting greeting(@RequestParam(value=\"name\", defaultValue=\"World\") String name) &#123; return new Greeting(counter.incrementAndGet(), String.format(template, name)); &#125;&#125; 控制类用于处理HTTP请求。 @RestController注释表明这是一个控制类。 @RequestMapping(&quot;/greeting&quot;)注释可以将请求到/greeting地址的HTTP请求映射到greeting()方法。 @RequestMapping默认会映射所有HTTP方式，可以通过@RequestMapping(method=GET)指定具体的方式。 @RequestParam注释用于将请求中的name字段与greeting()方法中的name参数绑定。 添加main方法 新建src/main/java/hello/Application.java文件： 123456789101112package hello;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class Application &#123; public static void main(String[] args) &#123; SpringApplication.run(Application.class, args); &#125;&#125; @SpringBootApplication注释相当于下列多个注释： @Configuration @EnableAutoConfiguration @EnableWebMvc @ComponentScan 运行 在工作目录下打开控制台窗口，运行： 1mvn spring-boot:run 之后访问http://localhost:8080/greeting即可看到API返回的数据，也可以在查询中带上参数name。 若要停止应用，按Ctrl+C（在git bash中失效）。 打包 在工作目录下打开控制台窗口，运行： 1mvn package 可以将应用打包为jar包，保存在target目录下。 以下命令可以查看jar包中都有什么： 1jar tvf target/gs-rest-service-0.1.0.jar 以下命令可以运行jar包： 1java -jar target/gs-rest-service-0.1.0.jar 同样，若要停止应用，按Ctrl+C。 使用IntelliJ IDEA如果使用IntelliJ IDEA，它已经自带了maven和spring，可以直接在IDE界面中点击按钮运行或调试，并且可以通过图形界面将应用打包。 参考Getting Started · Building a RESTful Web Service Spring Boot Reference Guide","categories":[{"name":"软件开发","slug":"软件开发","permalink":"http://solidays.tk/categories/软件开发/"}],"tags":[{"name":"Spring","slug":"Spring","permalink":"http://solidays.tk/tags/Spring/"}]},{"title":"win10 system high CPU usage","slug":"win10-system-high-CPU-usage","date":"2019-04-08T08:10:32.000Z","updated":"2019-04-08T08:30:11.242Z","comments":true,"path":"2019/04/08/win10-system-high-CPU-usage/","link":"","permalink":"http://solidays.tk/2019/04/08/win10-system-high-CPU-usage/","excerpt":"解决win10系统进程CPU占用率高的问题用的1809版本的专业版win10。","text":"解决win10系统进程CPU占用率高的问题用的1809版本的专业版win10。 这两天发现电脑没干啥风扇也呼呼响，不爽。 打开任务管理器发现system一直占用着15%左右的CPU。system里东西太多了，用Process Explorer查看一下。 Process Explorer下载地址：Process Explorer - Windows Sysinternals | Microsoft Docs。 找到system查看属性，在属性页里查看线程，发现CPU占用最多的是一个叫ntoskrnl的东西，查了一下感觉鸡肋，禁了。 参考system占用cpu解决（ntoskrnl.exe） - 张必安的博客- CSDN博客。 世界安静了。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"win10","slug":"win10","permalink":"http://solidays.tk/tags/win10/"}]},{"title":"Permission denied (publickey)","slug":"Permission-denied-publickey","date":"2019-04-02T11:45:12.000Z","updated":"2019-04-02T12:32:58.045Z","comments":true,"path":"2019/04/02/Permission-denied-publickey/","link":"","permalink":"http://solidays.tk/2019/04/02/Permission-denied-publickey/","excerpt":"解决Git部署时报错：Permission denied (publickey)平台：Win10","text":"解决Git部署时报错：Permission denied (publickey)平台：Win10 很久没有更新文章了，断更期间还重装了系统:D 于是乎今天用HEXO部署文章时报错了： 1Permission denied (publickey) 错误原因就是字面意思，SSH Key没有配置好。 首先在Git Bash中检查是否有SSH Key： 12$ ssh -T git@github.comgit@github.com: Permission denied (publickey). 嗯，没有。 那就新建一个吧： 123456789101112131415161718192021$ ssh-keygen -t rsa -C \"example@qq.com\"Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/xiaoming/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /c/Users/xiaoming/.ssh/id_rsa.Your public key has been saved in /c/Users/xiaoming/.ssh/id_rsa.pub.The key fingerprint is:SHA256:pdmmm0dTm/sssss5xoPmY82FCHznLngEbC5iEtpKkba example@qq.comThe key's randomart image is:+---[RSA 2048]----+|o.. . o.o ||o+.. . + . ||ooo o + ||Eo B = * ||. S = = o || o # * o || O / * || . * = . || |+----[SHA256]-----+ 执行过程中要求输入口令，直接回车就好，无伤大雅。然后登录GitHub在账户的设置中找到SSH and GPG keys，点击New SSH Key新建SSH Key，将c/Users/xiaoming/.ssh/id_rsa.pub文件内的公钥粘贴进去即可。 再次检查： 123$ ssh -T git@github.comWarning: Permanently added the RSA host key for IP address '13.250.177.223' to the list of known hosts.Hi Xiaoming! You've successfully authenticated, but GitHub does not provide shell access. OK，再次部署就成功了。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://solidays.tk/tags/Git/"}]},{"title":"Use your Chrome to visit Google","slug":"Use-your-Chrome-to-visit-Google","date":"2018-05-13T16:28:26.000Z","updated":"2018-05-13T17:02:08.307Z","comments":true,"path":"2018/05/14/Use-your-Chrome-to-visit-Google/","link":"","permalink":"http://solidays.tk/2018/05/14/Use-your-Chrome-to-visit-Google/","excerpt":"Chrome浏览器用过Chrome的人都说好。","text":"Chrome浏览器用过Chrome的人都说好。 个人觉得Chrome的界面干净清新，并且十分人性化。它对于开发者友好。它还有强大的插件，对，非常丰富的插件任你选择。在哪找呢？这是官方的Chrome应用商店。打不开吧？ 为了使用到应用商店里安全的插件，需要一些小技巧。 科学上网有一款为Chrome打造的访问谷歌的插件，叫做谷歌访问助手，安装并激活了这个插件，便可以无痛享受谷歌的大部分服务诸如谷歌搜索，Gmail和应用商店等。新世界在向你招手。 完。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"科学上网","slug":"科学上网","permalink":"http://solidays.tk/tags/科学上网/"}]},{"title":"SSL supported","slug":"SSL-supported","date":"2018-05-12T07:10:46.000Z","updated":"2018-05-12T07:24:15.024Z","comments":true,"path":"2018/05/12/SSL-supported/","link":"","permalink":"http://solidays.tk/2018/05/12/SSL-supported/","excerpt":"NOTE:即日起本站全面支持SSL协议。CloudFlare提供支持。","text":"NOTE:即日起本站全面支持SSL协议。CloudFlare提供支持。 今后本站不再引入http数据，但可能以链接形式给出。","categories":[{"name":"Note","slug":"Note","permalink":"http://solidays.tk/categories/Note/"}],"tags":[{"name":"SSL","slug":"SSL","permalink":"http://solidays.tk/tags/SSL/"}]},{"title":"Introduction to Qt Creater","slug":"Introduction-to-Qt-Creater","date":"2018-05-11T15:41:17.000Z","updated":"2018-05-12T06:59:56.124Z","comments":true,"path":"2018/05/11/Introduction-to-Qt-Creater/","link":"","permalink":"http://solidays.tk/2018/05/11/Introduction-to-Qt-Creater/","excerpt":"背景​ 最近操作系统项目要求做一个电梯调度程序，周围同学有的使用Java+Swing，有的使用Js，而我打算使用C++。第一次做有GUI的软件，上网搜索一番后发现了Qt这个工具，评价颇高。","text":"背景​ 最近操作系统项目要求做一个电梯调度程序，周围同学有的使用Java+Swing，有的使用Js，而我打算使用C++。第一次做有GUI的软件，上网搜索一番后发现了Qt这个工具，评价颇高。 下载安装​ 幸运的找到了Qt开源社区，上面有很多关于这个工具的资源。下载安装以及初步的学习推荐此教程。值得注意的是，直接在官网上下载安装包是需要注册的，而使用资源下载页面的链接可以绕过注册直接下载，链接如下： https://download.qt.io/official_releases/qt/5.8/5.8.0/qt-opensource-windows-x86-android-5.8.0.exe 文件很大，推荐使用迅雷下载，速度很快。 或者，qt-opensource-windows-x86-android-5.8.0.exe的百度网盘（密码：vr6h）： https://pan.baidu.com/s/1pvm38_Mk9CnE3VQtBRqeLw ​ 安装后界面如banner所示。共有六个模式，其中的设计模式可以方便的对UI进行可视化设计，简单了解即可上手。 通信机制​ Qt有一套自己的通信机制，涉及到三个关键字：字：signal，slot，emit。 signal（信号） 被声明为signal的函数用来发射信号，信号可以被槽函数（被声明为slot的函数）接收并触发槽函数。 slot（槽） 被声明为slot的函数可以接受信号函数的信号，值得注意的是，信号和槽之间的对应关系一对多或者多对一都可以，信号没有槽接收也是允许的。信号和槽之间的联系通过connect方法实现，如： 1connect(pointer1, SIGNAL(signalFun(int)), pointer2, SLOT(slotFun(int))); 上述语句将pointer1所指向的类中的成员信号函数signalFun与pointer2所指向的类中的成员槽函数slotFun相关联。槽函数除了可以与信号关联，与普通的函数没有什么区别。注意只有继承于Qt中的定义了信号的类或子类的类的成员函数才能与信号关联，也就是说非类的成员函数是显然不能与信号关联的。 emit（释放信号） 用于释放一个信号。如： 1emit signalFun(a);//a is an int 上述语句释放了一个signalFun信号，并且携带了参数a，与之关联的槽函数可以收到信号和参数并被触发。当然信号函数也可以不带任何参数。 ​ 这套机制有许多优点，它可以在不同的类甚至不同的线程之间进行使用，异常灵活。这对于多线程之间的通讯非常有用。并且它是类型安全的。","categories":[{"name":"软件开发","slug":"软件开发","permalink":"http://solidays.tk/categories/软件开发/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://solidays.tk/tags/Qt/"},{"name":"多线程","slug":"多线程","permalink":"http://solidays.tk/tags/多线程/"},{"name":"GUI","slug":"GUI","permalink":"http://solidays.tk/tags/GUI/"}]},{"title":"How to Win Your Friends in Wechat Jump","slug":"How-to-Win-Your-Friends-in-Wechat-Jump","date":"2018-01-16T14:37:31.000Z","updated":"2018-05-13T16:58:43.417Z","comments":true,"path":"2018/01/16/How-to-Win-Your-Friends-in-Wechat-Jump/","link":"","permalink":"http://solidays.tk/2018/01/16/How-to-Win-Your-Friends-in-Wechat-Jump/","excerpt":"近来微信推出的小程序跳一跳着实在朋友圈火了一把，然而作为手残党的我只能望着好友排行榜上四五百的成绩黯然神伤。偶然发现了GitHub上的跳一跳开挂项目，试了一下效果甚好。","text":"近来微信推出的小程序跳一跳着实在朋友圈火了一把，然而作为手残党的我只能望着好友排行榜上四五百的成绩黯然神伤。偶然发现了GitHub上的跳一跳开挂项目，试了一下效果甚好。 2017 年 12 月 28 日下午，微信发布了 6.6.1 版本，加入了「小游戏」功能，并提供了官方 DEMO「跳一跳」。这是一个 2.5D 插画风格的益智游戏，玩家可以通过按压屏幕时间的长短来控制这个「小人」跳跃的距离。如果能利用图像识别精确测量出起始和目标点之间测距离，就可以估计按压的时间来精确跳跃。 GitHub上的跳一跳辅助项目在这里。（温馨提示：腾讯的程序员显然也在持续关注这个项目，因此被官方识别出开挂而失去分数的可能性还是存在的。） 下面介绍如何在利用该项目称霸好友榜。我是在win10上操纵安卓设备，其他设备的请自行查阅文档。 搭建python环境自行百度安装即可。我安装的是python2.7.13。安装完成后还需要添加环境变量 ：在文件资源管理器-&gt;此电脑（右键）-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量，找到path变量，添加python的安装路径，例如C:\\Python27 。之后打开cmd输入python显示出版本号说明已经成功配置。 搭建ADB环境直接在这里下载安装即可。安装完成后同样要添加环境变量，方法同上（安装路径类似C:\\Program Files (x86)\\ClockworkMod\\Universal Adb Driver）。之后打开cmd输入adb显示出大量文字说明已经成功配置。 下载APP为了尽量简单，我们选择使用app进行一键操作。在这里下载最新的对应的release版本。比如我下载了STOP_jump_win.rar 。然后解压。在解压的目录里新建requirements.txt文件，内容与此处一致。 安装依赖文件在解压目录里面按住shift+鼠标右键打开命令行窗口或者powershell，运行以下命令： 1pip install -r requirements.txt 若不能识别pip试试以下语句 1python -m pip install -r requirements.txt 还不行的话以管理员身份打开命令行窗口或者powershell再尝试。 连接手机打开手机的USB调试，以内置光盘的方式连接电脑。Windows键加R键运行cmd，打开命令行窗口，执行adb devices命令。如果看到有设备连接表示已成功。这时候设备的状态可能还是下面这样： 12List of devices attachedXXXXXXXX unauthorized 只要在手机端弹出的窗口中授权即可，注意勾选一直授权。这时候再次执行adb devices命令，变成如下： 12List of devices attachedXXXXXXXX device 进行usb调试的方法，不同手机不尽相同，如果ADB没有发现你的设备，请自行百度原因。 运行程序在解压目录中运行.exe文件，例如stop_jump1_1_2.exe。如果提示请安装ADB并配置环境变量（大概由于adb版本不兼容），尝试将解压目录中的adb.exe文件删除（任务管理器中结束它的进程再删除），并找到ADB安装目录中的adb.exe复制进解压目录。重新运行即可。如果看到如下内容，大功告成。 最后贴上一张效果图😆，and装逼请适度。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"跳一跳","slug":"跳一跳","permalink":"http://solidays.tk/tags/跳一跳/"}]},{"title":"Add Donation to your Site","slug":"Add-Donation-to-your-Site","date":"2017-08-18T04:50:13.000Z","updated":"2017-08-26T08:38:34.336Z","comments":true,"path":"2017/08/18/Add-Donation-to-your-Site/","link":"","permalink":"http://solidays.tk/2017/08/18/Add-Donation-to-your-Site/","excerpt":"如何给自己的网站添加打赏😆","text":"如何给自己的网站添加打赏😆 许多的原创内容的网站尤其是博客都有打赏的功能，下面介绍如何添加简单的打赏按钮借助hexo建站的网站，并且使用的是NexT主题，主题本身已经自带了打赏功能，参照主题文档开启即可，不再赘述。 其他网站仅需简单两步即可引入打赏： 在文章布局的尾部插入如下代码块(hexo中直接添加进/blog/themes/…/layout/…/article.ejs文件中) 12345678910111213141516171819202122&lt;div style=\"padding: 10px 0; margin: 20px auto; width: 90%; text-align: center\"&gt; &lt;div&gt;您的支持将鼓励我继续创作！&lt;/div&gt; &lt;br&gt; &lt;button id=\"rewardButton\" onclick=\"var qr = document.getElementById('QR'); if (qr.style.display === 'none') &#123;qr.style.display='block';&#125; else &#123;qr.style.display='none'&#125;\" disable=\"enable\"&gt; &lt;img src=\"按钮图片路径\"&gt; &lt;/button&gt; &lt;div id=\"QR\" style=\"display: none;\"&gt; &lt;div style=\"display: inline-block\"&gt; &lt;img src=\"支付宝收款二维码路径\"&gt; &lt;p&gt;支付宝打赏&lt;/p&gt; &lt;/div&gt; &lt;div style=\"display: inline-block\"&gt; &lt;img src=\"微信收款二维码路径\"&gt; &lt;p&gt;微信打赏&lt;/p&gt; &lt;/div&gt; &lt;div style=\"display: inline-block\"&gt; &lt;img src=\"QQ收款二维码路径\"&gt; &lt;p&gt;QQ打赏&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; ​ 引入简单的样式文件(hexo中可直接加进/blog/themes/…/layout/…/article.ejs文件末尾) 1234567891011121314151617181920212223242526272829303132&lt;style&gt;#rewardButton &#123; width: 40px; height: 40px; cursor: pointer; border: 0; outline: 0; border-radius: 100%; padding: 0; margin: 0;&#125;#QR &#123; padding-top: 20px;&#125;#QR img &#123; width: 120px; max-width: 100%; margin: .8em 2em 0;&#125;#rewardButton img &#123; display: inline-block; width: 40px; height: 40px; border-radius: 5px; background: #b9dff3;&#125;#rewardButton img:hover &#123; background: #f39a75;&#125;&lt;/style&gt; ​ 大功告成辣。效果请看文章下方的打赏按钮。 欢迎打赏(:3_ヽ)_","categories":[{"name":"Web开发","slug":"Web开发","permalink":"http://solidays.tk/categories/Web开发/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://solidays.tk/tags/Hexo/"}]},{"title":"emoji cheat sheet","slug":"emoji-cheat-sheet","date":"2017-08-10T04:16:20.000Z","updated":"2019-04-02T11:13:47.057Z","comments":true,"path":"2017/08/10/emoji-cheat-sheet/","link":"","permalink":"http://solidays.tk/2017/08/10/emoji-cheat-sheet/","excerpt":"Some emojis supported on Github:","text":"Some emojis supported on Github: People😄😆😊😃☺️😏😍😘😚😳😌😆😁😉😜😝😀😗😙😛😴😟😦😧😮😬😕😯😑😒😅😓😥😩😔😞😖😨😰😣😢😭😂😲😱😫😠😡😤😪😋😷😎😵👿😈😐😶😇👽💛💙💜 ❤️ 💚💔💓💗💕💞💘💖✨⭐️🌟💫💥💥💢❗️❓❕❔💤💨💦🎶🎵🔥💩💩💩👍👍👎👎👌👊👊✊✌️👋✋✋👐☝️👇👈👉🙌🙏👆👏💪🤘🖕🏃🏃👫👪👬👭💃👯🙆🙅💁🙋👰🙎🙍🙇💑💆💇💅👦👧👩👨👶👵👴👱👲👳👷👮👼👸😺😸😻😽😼🙀😿😹😾👹👺🙈🙉🙊💂💀🐾👄💋💧👂👀👃👅💌👤👥💬💭 Nature☀️☔️☁️❄️⛄️⚡️🌀🌁🌊🐱🐶🐭🐹🐰🐺🐸🐯🐨🐻🐷🐽🐮🐗🐵🐒🐴🐎🐫🐑🐘🐼🐍🐦🐤🐥🐣🐔🐧🐢🐛🐝🐜🐞🐌🐙🐠🐟🐳🐋🐬🐄🐏🐀🐃🐅🐇🐉🐐🐓🐕🐖🐁🐂🐲🐡🐊🐪🐆🐈🐩🐾💐🌸🌷🍀🌹🌻🌺🍁🍃🍂🌿🍄🌵🌴🌲🌳🌰🌱🌼🌾🐚🌐🌞🌝🌚🌑🌒🌓🌔🌕🌖🌗🌘🌜🌛🌙🌍🌎🌏🌋🌌⛅️ Objects🎍💝🎎🎒🎓🎏🎆🎇🎐🎑🎃👻🎅🎄🎁🔔🔕🎋🎉🎊🎈🔮💿📀💾📷📹🎥💻📺📱☎️☎️📞📟📠💽📼🔉🔈🔇📢📣⌛️⏳⏰⌚️📻📡➿🔍🔎🔓🔒🔏🔐🔑💡🔦🔆🔅🔌🔋📲✉️📫📮🛀🛁🚿🚽🔧🔩🔨💺💰💴💵💷💶💳💸📧📥📤✉️📨📯📪📬📭📦🚪🚬💣🔫🔪💊💉📄📃📑📊📈📉📜📋📆📅📇📁📂✂️📌📎✒️✏️📏📐📕📗📘📙📓📔📒📚🔖📛🔬🔭📰🏈🏀⚽️⚾️🎾🎱🏉🎳⛳️🚵🚴🏇🏂🏊🏄🎿♠️♥️♣️♦️💎💍🏆🎼🎹🎻👾🎮🃏🎴🎲🎯🀄️🎬📝📝📖🎨🎤🎧🎺🎷🎸👞👡👠💄👢👕👕👔👚👗🎽👖👘👙🎀🎩👑👒👞🌂💼👜👝👛👓🎣☕️🍵🍶🍼🍺🍻🍸🍹🍷🍴🍕🍔🍟🍗🍖🍝🍛🍤🍱🍣🍥🍙🍘🍚🍜🍲🍢🍡🥚🍞🍩🍮🍦🍨🍧🎂🍰🍪🍫🍬🍭🍯🍎🍏🍊🍋🍒🍇🍉🍓🍑🍈🍌🍐🍍🍠🍆🍅🌽 Places🏠🏡🏫🏢🏣🏥🏦🏪🏩🏨💒⛪️🏬🏤🌇🌆🏯🏰⛺️🏭🗼🗾🗻🌄🌅🌠🗽🌉🎠🌈🎡⛲️🎢🚢🚤⛵️⛵️🚣⚓️🚀✈️🚁🚂🚊🚞🚲🚡🚟🚠🚜🚙🚘🚗🚗🚕🚖🚛🚌🚍🚨🚓🚔🚒🚑🚐🚚🚋🚉🚆🚅🚄🚈🚝🚃🚎🎫⛽️🚦🚥⚠️🚧🔰🏧🎰🚏💈♨️🏁🎌🏮🗿🎪🎭📍🚩 Symbols🔟🔢🔣◀️⬇️▶️⬅️🔠🔡🔤↙️↘️➡️⬆️↖️↗️⏬⏫🔽⤵️⤴️↩️↪️↔️↕️🔼🔃🔄⏪⏩ℹ️🆗🔀🔁🔂🆕🔝🆙🆒🆓🆖🎦🈁📶🈹🈴🈺🈯️🈷️🈶🈵🈚️🈸🈳🈲🈂️🚻🚹🚺🚼🚭🅿️♿️🚇🛄🉑🚾🚰🚮㊙️㊗️Ⓜ️🛂🛅🛃🉐🆑🆘🆔🚫🔞📵🚯🚱🚳🚷🚸⛔️✳️❇️✴️💟🆚📳📴💹💱♈️♉️♊️♋️♌️♍️♎️♏️♐️♑️♒️♓️⛎🔯❎🅰️🅱️🆎🅾️💠♻️🔚🔙🔛🔜🕐🕜🕙🕥🕚🕦🕛🕧🕑🕝🕒🕞🕓🕟🕔🕠🕕🕡🕖🕢🕗🕣🕘🕤💲©️®️™️❌❗️‼️⁉️⭕️✖️➕➖➗💮💯✔️☑️🔘🔗➰〰️〽️🔱▪️▫️◾️◽️◼️◻️⬛️⬜️✅🔲🔳⚫️⚪️🔴🔵🔷🔶🔹🔸🔺🔻 Others ![:bowtie:](https://assets-cdn.github.com/images/icons/emoji/bowtie.png) ![:neckbeard:](https://assets-cdn.github.com/images/icons/emoji/neckbeard.png) ![:feelsgood:](https://assets-cdn.github.com/images/icons/emoji/feelsgood.png)![:finnadie:](https://assets-cdn.github.com/images/icons/emoji/finnadie.png)![:goberserk:](https://assets-cdn.github.com/images/icons/emoji/goberserk.png)![:godmode:](https://assets-cdn.github.com/images/icons/emoji/godmode.png)![:hurtrealbad:](https://assets-cdn.github.com/images/icons/emoji/hurtrealbad.png)![:rage1:](https://assets-cdn.github.com/images/icons/emoji/rage1.png)![:rage2:](https://assets-cdn.github.com/images/icons/emoji/rage2.png)![:rage3:](https://assets-cdn.github.com/images/icons/emoji/rage3.png)![:rage4:](https://assets-cdn.github.com/images/icons/emoji/rage4.png)![:suspect:](https://assets-cdn.github.com/images/icons/emoji/suspect.png)![:trollface:](https://assets-cdn.github.com/images/icons/emoji/trollface.png)![:shipit:](https://assets-cdn.github.com/images/icons/emoji/shipit.png) ![:jp:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1ef-1f1f5.png)![:kr:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1f0-1f1f7.png)![:cn:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1e8-1f1f3.png)![:us:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1fa-1f1f8.png)![:fr:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1eb-1f1f7.png)![:es:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1ea-1f1f8.png)![:it:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1ee-1f1f9.png)![:ru:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1f7-1f1fa.png)![:gb:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1ec-1f1e7.png)![:gb:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1ec-1f1e7.png)![:de:](https://assets-cdn.github.com/images/icons/emoji/unicode/1f1e9-1f1ea.png) ![:one:](https://assets-cdn.github.com/images/icons/emoji/unicode/0031-20e3.png)![:two:](https://assets-cdn.github.com/images/icons/emoji/unicode/0032-20e3.png)![:three:](https://assets-cdn.github.com/images/icons/emoji/unicode/0033-20e3.png)![:four:](https://assets-cdn.github.com/images/icons/emoji/unicode/0034-20e3.png)![:five:](https://assets-cdn.github.com/images/icons/emoji/unicode/0035-20e3.png)![:six:](https://assets-cdn.github.com/images/icons/emoji/unicode/0036-20e3.png)![:seven:](https://assets-cdn.github.com/images/icons/emoji/unicode/0037-20e3.png)![:eight:](https://assets-cdn.github.com/images/icons/emoji/unicode/0038-20e3.png)![:nine:](https://assets-cdn.github.com/images/icons/emoji/unicode/0039-20e3.png) ![:zero:](https://assets-cdn.github.com/images/icons/emoji/unicode/0030-20e3.png)![:hash:](https://assets-cdn.github.com/images/icons/emoji/unicode/0023-20e3.png)","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"emoji","slug":"emoji","permalink":"http://solidays.tk/tags/emoji/"}]},{"title":"有哪些优秀且免费的云存储服务？","slug":"有哪些优秀且免费的云存储服务？","date":"2017-08-02T13:12:36.000Z","updated":"2018-05-13T16:58:55.876Z","comments":true,"path":"2017/08/02/有哪些优秀且免费的云存储服务？/","link":"","permalink":"http://solidays.tk/2017/08/02/有哪些优秀且免费的云存储服务？/","excerpt":"转载自知乎有哪些优秀且免费的云存储服务？","text":"转载自知乎有哪些优秀且免费的云存储服务？ 网盘 *Dropbox * - https://www.dropbox.com/ 2G-25G网页版单个文件限制10G，客户端无限。邀请好友可扩容到18G。前几年的 Dropques ，Camera Uploads 等活动可以扩容到25G。如果你在文档里修改了一个字，Dropbox 只同步这个字，其他网盘一般需要同步整个文档。2012年前注册的账号，可以使用 Public 文件夹外链文件。支持中文。 Google Drive（谷歌云端硬盘） - https://www.google.com/drive/?hl=zh-cn 15G 或 17G。单个文件限制5T，基本等于无限了。去年有个检查账号安全设置的任务可增加2G空间。谷歌使用任播的方式传输数据，服务器又多，速度很快，在中国修改 Hosts 后速度也很快。上传的音视频可在线欣赏。 OneDrive（Skydrive） - https://onedrive.live.com/about/zh-cn/ 微软的网盘5G-15G单个文件限制10G邀请好友可扩容网页版支持断点续传 *MEGA - *https://mega.nz/ 50G在中国传输速度依然很快网页版支持断点续传 MediaFire - https://www.mediafire.com/ 10G-50G邀请好友可扩容可从网址上传文件，即离线下载。 Box - https://www.box.com/home 10G-50G前几年做任务可扩容至50G单个文件限制250M。 ​ iCloud Drive - https://www.icloud.com/#iclouddrive 苹果的网盘5G单个文件限制15Ghttps://www.me.com/ 可跳转到 iCloud.com MultCloud - https://www.multcloud.com/ 这是个整合网盘的工具。绑定其他网盘后可在网盘间传输数据。数据是在 MultCloud 的服务器传输，创建任务后等待即可。免费版速度有限制，不过一般能达到 300-500 kb/s，跟国内 4M 的上行宽带相当。这是总部位于成都的 AOMEI 公司的产品。 百度网盘 - https://pan.baidu.com/ 15G-3T去年登陆手机 App 可扩容至2T，现在只能扩容至1T，第2T需要绑定银行卡。老用户参加过购买过容量等活动的可扩容到3T。安装 Chrome 插件 - Tampermonkey，并安装百度网盘相关脚本，即可直接网页下载文件。上传，下载均有限速，可使用 IDM 等软件加速下载。 腾讯微云 - https://www.weiyun.com/ 10G上传，下载均有限速。 淘宝淘盘 - https://yunpan.taobao.com/ 支付宝实名方可使用。由于未实名，所以没有使用。 中国移动 和彩云 - https://caiyun.feixin.10086.cn/ 16G-100G单个文件限制4G 中国电信 天翼云盘 - https://cloud.189.cn/ 10G-2T单个文件限制2G目前登陆移动App可扩容至2T 网易邮箱网盘 - https://mail.163.com/ 2G-7G单个文件限制1G验证手机号可扩容到5G，开通随身邮（付费）可增加2G。 京东云盘 - https://jbox.jcloud.com/ 10G单个文件限制1G 小米云盘 - https://i.mi.com/drive 5G-20G单个文件限制4G pCloud - https://www.pcloud.com/ 10G-20G邀请好友可扩容可从网址上传文件，即离线下载。 华硕网盘（ASUS WebStorage） - https://www.asuswebstorage.com/ 5G单个文件限制500M 对象存储对象存储服务大部分都需要付费，免费用户有流量和容量限制。国内的服务大部分需要实名认证才可使用，绑定域名需备案。下面是一些可以免费使用的服务。 Google Storage - https://cloud.google.com/storage/ 其 Transfer 功能可从其他 Storage，Amazon S3，以及 URL（tab-separated value (TSV) file） 传输文件，即离线下载。支持中文，可在设置里更改。 网易蜂巢 NOS - https://c.163.com/product/nos 免费用户20G下载流量 - https://support.c.163.com/md.html# 腾讯云 COS - https://www.qcloud.com/product/cos.html 免费用户每月10G流量 - https://www.qcloud.com/document/product/430/5872#.E5.85.8D.E8.B4.B9.E9.A2.9D.E5.BA.A6 阿里云 OSS - https://www.aliyun.com/product/oss 中国大陆以外的服务器5G免费 - https://www.aliyun.com/price/product#/oss/detail 七牛云 - https://portal.qiniu.com/bucket 云笔记 印象笔记 - https://www.yinxiang.com/ 可添加提醒 Evernote - https://evernote.com/ 印象笔记的国际版，可添加提醒，可链接共享。 有道云笔记 - https://note.youdao.com/ 网易的产品，可链接共享。 Google Keep - https://www.google.com/keep/ 可添加提醒 Onenote - https://www.onenote.com/ 微软的产品，可添加提醒，可链接共享，并且可选择只读或可编辑的链接共享。 Dropbox Paper - https://paper.dropbox.com/ 云协作 Google 文档 - https://www.google.com/docs/about/?hl=zh-cn Microsoft Word Online - https://office.live.com/start/Word.aspx?mkt=zh-cn Docs - https://docs.com/zh-cn** 这个也是微软的 有道云协作 - https://note.youdao.com/groupintro.html 网易公司的产品 Zoho - https://www.zoho.com/docs Zoho中国版（百会） - https://www.zoho.com.cn/docs/ WPS云文档 - https://drive.wps.cn/landing.html 百度Doc - https://word.baidu.com/ 图床对象存储服务和带有 Public 文件夹的 Dropbox 亦可做图床使用 Google Photos - https://photos.google.com/ 1600万像素以下的照片不占存储空间 500px - https://500px.com/ 最好看的图片分享网站，没有之一。链接不好找，可使用Chrome插件 500px Photos Download 或者访问 500XYZ Flickr - https://www.flickr.com/ Yahoo 的相册，1T 免费空间。 Imgur - https://imgur.com/ 新浪微博相册 - https://photo.weibo.com/ ww改成ws 可支持 Https 网易Lofter - https://www.lofter.com Javascript 公共库 Google Hosted Libraries - https://developers.google.com/speed/libraries/ Microsoft Ajax Content Delivery Network - https://docs.microsoft.com/en-us/aspnet/ajax/cdn/overview cdnjs - https://cdnjs.com/ Cloudflare 的公共CDN jsDelivr - https://www.jsdelivr.com/ 国内有服务器，支持SSL（Https）。 新浪云 - https://lib.sinaapp.com/ 清华大学 TUNA 协会 - https://mirrors.tuna.tsinghua.edu.cn/ 中国科技大学 - https://servers.blog.ustc.edu.cn/2014/06/blog-googlefonts-speedup/ CDN CloudFlare - https://www.cloudflare.com/ 全球各地均有服务器(使用中国的服务器[百度]需备案)。还可免费提供 SSL(HTTPS)。 百度云加速（安全宝） - https://su.baidu.com/ 代码托管 Github Pages - https://pages.github.com/ 提供形似 https://abc.github.io 的二级域名，可绑定自己域名。 Coding Pages - https://coding.net/help/doc/pages/ 主机 Hostinger 中国 - https://www.hostinger.com.hk/ 不错的免费主机，支持PHP等动态网页，无广告，有网页版文件管理器，不用下载任何软件即可上传文件。","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"云存储","slug":"云存储","permalink":"http://solidays.tk/tags/云存储/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-25T07:10:46.000Z","updated":"2019-04-02T11:01:58.808Z","comments":true,"path":"2017/07/25/hello-world/","link":"","permalink":"http://solidays.tk/2017/07/25/hello-world/","excerpt":"Welcome to Solidays.tk!","text":"Welcome to Solidays.tk! This is an example😋😆🎉","categories":[{"name":"Misc","slug":"Misc","permalink":"http://solidays.tk/categories/Misc/"}],"tags":[{"name":"example","slug":"example","permalink":"http://solidays.tk/tags/example/"}]}]}